/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2022-04-05 13:28:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.Views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class emailOTP_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>OTP Validator</title>\n");
      out.write("        <style>\n");
      out.write("\n");
      out.write("            body {\n");
      out.write("                background-image: url('https://www-cms.pipedriveassets.com/blog-assets/sales-email-templates.png');\n");
      out.write("                background-repeat: no-repeat;\n");
      out.write("                background-attachment: fixed;\n");
      out.write("                background-size: cover;\n");
      out.write("            }\n");
      out.write("            p {\n");
      out.write("                text-align: center;\n");
      out.write("                font-size: 60px;\n");
      out.write("                margin-top: 0px;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("    <center>\n");
      out.write("        <h1>Please enter OTP</h1><br>\n");
      out.write("        An OTP has been sent to ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("<br>\n");
      out.write("        <div>Please enter within <span id=\"time\"></span> minutes!</div>\n");
      out.write("        <br><!-- comment --><br>\n");
      out.write("        <form action=\"login\" method=\"POST\">\n");
      out.write("            Enter OTP: <input name=\"OTP\" type=\"text\"/>\n");
      out.write("        </form>\n");
      out.write("    </center>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("        window.history.forward();\n");
      out.write("        function noBack() {\n");
      out.write("            window.history.forward();\n");
      out.write("        }\n");
      out.write("        function startTimer(duration, display) {\n");
      out.write("            var start = Date.now(),\n");
      out.write("                    diff,\n");
      out.write("                    minutes,\n");
      out.write("                    seconds;\n");
      out.write("            function timer() {\n");
      out.write("                // get the number of seconds that have elapsed since \n");
      out.write("                // startTimer() was called\n");
      out.write("                diff = duration - (((Date.now() - start) / 1000) | 0);\n");
      out.write("\n");
      out.write("                // does the same job as parseInt truncates the float\n");
      out.write("                minutes = (diff / 60) | 0;\n");
      out.write("                seconds = (diff % 60) | 0;\n");
      out.write("\n");
      out.write("                minutes = minutes < 10 ? \"0\" + minutes : minutes;\n");
      out.write("                seconds = seconds < 10 ? \"0\" + seconds : seconds;\n");
      out.write("\n");
      out.write("                display.textContent = minutes + \":\" + seconds;\n");
      out.write("\n");
      out.write("                if (diff <= 0) {\n");
      out.write("                    // add one second so that the count down starts at the full duration\n");
      out.write("                    // example 05:00 not 04:59\n");
      out.write("                    start = Date.now() + 1000;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            ;\n");
      out.write("// we don't want to wait a full second before the timer starts\n");
      out.write("            timer();\n");
      out.write("            setInterval(timer, 1000);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        window.onload = function () {\n");
      out.write("            var fiveMinutes = 60 * 1,\n");
      out.write("                    display = document.querySelector('#time');\n");
      out.write("            startTimer(fiveMinutes, display);\n");
      out.write("            timer = setTimeout(function () {\n");
      out.write("                alert('Timeout');\n");
      out.write("                window.location.href = 'dbvalidate';\n");
      out.write("            }, 60000);\n");
      out.write("        };\n");
      out.write("    </script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
